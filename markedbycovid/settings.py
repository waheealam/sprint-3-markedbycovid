"""
Django settings for markedbycovid project.
Generated by 'django-admin startproject' using Django 4.1.
For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/
For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""
import os
from pathlib import Path
import django_on_heroku

# Build paths inside the project like this: BASE_DIR / 'subdir'.


BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-vfiq&v8wp+b$gvb&$n-o0#v-ou5#c7_-&r0va!k#@my6^+51vu'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.environ.get('DEBUG', True)

ALLOWED_HOSTS = ['*']
# ALLOWED_HOSTS = ['.localhost', '.herokuapp.com', 'www.nia.com', 'cat.nia.com']

CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOW_HEADERS = ['*']

# Application definition

INSTALLED_APPS = [
    'grappelli',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'import_export',
    'corsheaders',
    'Memorialmatrix.apps.MemorialmatrixConfig',
    'report_builder',
    'simple_history',
    # wagtail apps
    'wagtail.contrib.forms',
    'wagtail.contrib.redirects',
    'wagtail.embeds',
    'wagtail.sites',
    'wagtail.users',
    'wagtail.snippets',
    'wagtail.documents',
    'wagtail.images',
    'wagtail.search',
    'wagtail.admin',
    'wagtail.api.v2',
    'wagtail',
    'modelcluster',
    'taggit',
    'WagtailApp',

]

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'crum.CurrentRequestUserMiddleware',
    'simple_history.middleware.HistoryRequestMiddleware',
    'wagtail.contrib.redirects.middleware.RedirectMiddleware',
]

ROOT_URLCONF = 'markedbycovid.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'dist')],

        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.template.context_processors.media',
                'django.template.context_processors.static',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'markedbycovid.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases


# use the db.sqllite for dev
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

DATABASES = {
   'default': {
       'ENGINE': 'django.db.backends.postgresql_psycopg2',
       'NAME': 'MBCDatabaseDump',
       'USER': 'postgres',
       'PASSWORD': '6955'
  }
}
# DATABASES = {
#    'default': {
#        'ENGINE': 'django.db.backends.postgresql',
#        'NAME': os.environ.get('db_name'),
#        'USER': os.environ.get('user_name'),
#        'PASSWORD': os.environ.get('password')
#   }
# }

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/
PROJECT_ROOT = os.path.dirname(os.path.abspath(__file__))

STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATIC_URL = '/static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'dist/static'),
]

STATICFILES_STORAGE = 'whitenoise.storage.CompressedStaticFilesStorage'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# New entries - Sachin
REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.AllowAny',
    ),
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
#     'DEFAULT_AUTHENTICATION_CLASSES': ['rest_framework.authentication.BasicAuthentication',
#                                        'rest_framework.authentication.SessionAuthentication', ]
}

# REST_FRAMEWORK = {
#     'DEFAULT_PERMISSION_CLASSES': (
#         'rest_framework.permissions.IsAuthenticated',
#     ),
#     'DEFAULT_AUTHENTICATION_CLASSES': (
#
#     #    'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
#      'rest_framework_simplejwt.authentication.JWTAuthentication',
#     ),
# }
#

AUTH_USER_MODEL = 'Memorialmatrix.CustomUser'
REPORT_BUILDER_GLOBAL_EXPORT = True
django_on_heroku.settings(locals())
REPORT_BUILDER_FRONTEND = True
USE_TZ = True
SIMPLE_HISTORY_DATE_INDEX = True
SIMPLE_HISTORY_HISTORY_CHANGE_REASON_USE_TEXT_FIELD = True
SIMPLE_HISTORY_REVERT_DISABLED = False
WAGTAIL_SITE_NAME = 'Marked by Covid - Memorial Matrix'
GRAPPELLI_ADMIN_TITLE = 'Memorial Matrix Administration'
GRAPPELLI_ADMIN_HEADLINE = 'Marked By Covid Admin'
REPORT_BUILDER_EXCLUDE = ['wagtailcore.page', 'wagtailcore.groupapprovaltask', 'wagtailadmin.admin',
                          'wagtaildocs.document', 'wagtailimages.image', ''
                                                                         ''
                                                                         'wagtailforms.formsubmission',
                          'wagtailredirects.redirect', 'wagtailembeds.embed', 'wagtailusers.userprofile',
                          'wagtaildocs.uploadeddocument',
                          'wagtailredirects.redirect', 'wagtailembeds.embed', 'wagtailsearch.query',
                          'wagtailsearch.indexentry', 'wagtailcore.collection', 'wagtailcore.workflowpage',
                          'wagtailcore.locale', 'taggit.tag', 'wagtailcore.workflow', 'wagtailimages_image',
                          'wagtailcore.modellogentry', 'wagtailcore.grouppagepermission',
                          'wagtailusers.userprofile', 'wagtaildocs.uploadeddocument', 'taggit.taggeditem',
                          'wagtailcore.collectionviewrestriction', 'wagtailcore.pageviewrestriction',
                          'wagtailcore.revision', 'wagtailimages.rendition', 'wagtailimages.uploadedimage',
                          'wagtailcore.groupcollectionpermission',
                          'wagtailcore.referenceindex', 'wagtailcore.comment', 'wagtailcore.commentreply',
                          'wagtailcore.workflowstate',
                          'wagtailcore.pagelogentry', 'wagtailsearch.querydailyhits', 'wagtailcore.locale',
                          'wagtailsearch.indexentry',
                          'wagtailcore.workflow_page', 'wagtailcore.task', 'wagtailcore.pagesubscription',
                          'wagtailcore.Workflowstate', 'wagtailsearch_indexentry_fts',
                          'wagtailcore.taskstate', 'wagtailcore.site', 'WagtailApp.aboutpage', 'WagtailApp.footerpage',
                          'WagtailApp.faqpage', 'wagtailcore.workflowtask_order', ]

# Local settings override
try:
    from .local_settings import *
except ImportError:
    pass

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = os.environ.get('EMAIL_HOST')
EMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD')
EMAIL_PORT = os.environ.get('EMAIL_PORT')
EMAIL_USE_TLS = True
